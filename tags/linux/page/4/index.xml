<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linux on ZA TAN</title><link>https://www.ganymedenil.com/tags/linux/</link><description>Recent content in linux on ZA TAN</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 19 Feb 2018 01:21:36 +0000</lastBuildDate><atom:link href="https://www.ganymedenil.com/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>go基础库之在字符串中查找子字符串</title><link>https://www.ganymedenil.com/2019/05/23/go-standard-library-by-find-a-substring-in-a-string.html</link><pubDate>Thu, 23 May 2019 20:20:52 +0000</pubDate><guid>https://www.ganymedenil.com/2019/05/23/go-standard-library-by-find-a-substring-in-a-string.html</guid><description>&lt;p>在字符串中查找子字符串是开发人员最常见的任务之一。大多数主流语言都是在标准库中实现的。Go也不例外。&lt;/p></description></item><item><title>go基础库之正常关闭应用程序</title><link>https://www.ganymedenil.com/2019/05/23/go-standard-library-by-close-the-application-gracefully.html</link><pubDate>Thu, 23 May 2019 20:19:27 +0000</pubDate><guid>https://www.ganymedenil.com/2019/05/23/go-standard-library-by-close-the-application-gracefully.html</guid><description>&lt;p>服务和守护程序是运行很长时间（通常是几天甚至几周）的程序。这些长时间运行的程序通常在开始时分配资源（数据库连接，网络sock）并保留这些资源，只要它们存在，就不会释放。如果此类进程被终止并且未正确处理关闭，则可能发生资源泄漏。为了避免这种行为，应该实现所谓的正常关闭。&lt;/p>
&lt;p>在这种情况下，优雅 意味着应用程序捕获终止信号（如果可能），并尝试在终止之前清理和释放分配的资源。本篇将向你展示如何实现正常关闭。&lt;/p></description></item><item><title>go基础库之带功能选项的文件配置</title><link>https://www.ganymedenil.com/2019/05/22/go-standard-library-by-file-configuration-with-function-options.html</link><pubDate>Wed, 22 May 2019 21:56:30 +0000</pubDate><guid>https://www.ganymedenil.com/2019/05/22/go-standard-library-by-file-configuration-with-function-options.html</guid><description>&lt;p>本篇将介绍如何处理应用程序的可选配置，并在具有文件配置的实际案例中使用功能选项模式。&lt;/p></description></item><item><title>go基础库之处理操作系统信号</title><link>https://www.ganymedenil.com/2019/05/22/go-standard-library-by-handling-operating-system-signals.html</link><pubDate>Wed, 22 May 2019 21:54:30 +0000</pubDate><guid>https://www.ganymedenil.com/2019/05/22/go-standard-library-by-handling-operating-system-signals.html</guid><description>&lt;p>信号是操作系统与正在运行的进程进行通信的基本方式。其中两种最常见的信号是&lt;code>SIGINT&lt;/code>和&lt;code>SIGTERM&lt;/code>。这两个信号将导致程序终止。&lt;/p>
&lt;p>还有信号如&lt;code>SIGHUP&lt;/code>。&lt;code>SIGHUP&lt;/code>表示调用该进程的终端已经关闭，例如，程序可以通过该信号决定是否移动到后台执行。&lt;/p>
&lt;p>Go提供了一种在应用程序收到信号时处理行为的方法。&lt;/p></description></item><item><title>go基础库之调用外部进程</title><link>https://www.ganymedenil.com/2019/05/21/go-standard-library-by-calling-an-external-process.html</link><pubDate>Tue, 21 May 2019 19:58:58 +0000</pubDate><guid>https://www.ganymedenil.com/2019/05/21/go-standard-library-by-calling-an-external-process.html</guid><description>&lt;p>Go二进制文件还可以用作各种实用程序的工具，并且&lt;code>go run&lt;/code>也可以用作bash脚本的代替品。&lt;/p></description></item><item><title>go基础库之获取当前进程PID</title><link>https://www.ganymedenil.com/2019/05/21/go-standard-library-by-get-the-current-process-PID.html</link><pubDate>Tue, 21 May 2019 19:55:58 +0000</pubDate><guid>https://www.ganymedenil.com/2019/05/21/go-standard-library-by-get-the-current-process-PID.html</guid><description>&lt;p>获取到运行进程的PID是非常有用的。操作系统应用可以使用PID来查找关于进程本身的信息。当进程失败时获取到的PID就非常有价值，这样就可以使用PID跟踪整个系统中的系统日志，如&lt;code>/var/log/messages&lt;/code>、&lt;code>/var/log/syslog&lt;/code>。&lt;/p></description></item><item><title>go基础库之获取子进程信息</title><link>https://www.ganymedenil.com/2019/05/20/go-standard-library-by-get-child-process-information.html</link><pubDate>Mon, 20 May 2019 20:55:58 +0000</pubDate><guid>https://www.ganymedenil.com/2019/05/20/go-standard-library-by-get-child-process-information.html</guid><description>&lt;p>本篇将介绍如何在程序终止后获取有关子进程的PID和基本信息。&lt;/p>
&lt;p>有关正在运行的进程信息只能通过&lt;code>syscall&lt;/code>包获取，并且与平台高度相关。&lt;/p></description></item><item><title>go基础库之从子进程读写</title><link>https://www.ganymedenil.com/2019/05/20/go-standard-library-by-read-and-write-from-child-processes.html</link><pubDate>Mon, 20 May 2019 20:45:58 +0000</pubDate><guid>https://www.ganymedenil.com/2019/05/20/go-standard-library-by-read-and-write-from-child-processes.html</guid><description>&lt;p>每个执行进程都具有标准输出、输入和错误输出。Go标准库提供了对这些进行读写的方法。&lt;/p></description></item><item><title>go基础库之获取当前工作目录</title><link>https://www.ganymedenil.com/2019/05/18/go-standard-library-by-get-current-working-directory.html</link><pubDate>Sat, 18 May 2019 23:02:52 +0000</pubDate><guid>https://www.ganymedenil.com/2019/05/18/go-standard-library-by-get-current-working-directory.html</guid><description>&lt;p>golang 基础库之go获取命令行参数，介绍了如何获取当前工作目录&lt;/p></description></item><item><title>go基础库之环境变量的获取与设置以及如何使用默认值</title><link>https://www.ganymedenil.com/2019/05/18/go-standard-library-by-environment%20variables.html</link><pubDate>Sat, 18 May 2019 22:00:14 +0000</pubDate><guid>https://www.ganymedenil.com/2019/05/18/go-standard-library-by-environment%20variables.html</guid><description>&lt;p>golang 基础库之go获取命令行参数，介绍了环境变量的获取与设置以及如何使用默认值&lt;/p></description></item><item><title>go基础库之使用flag包创建程序交互操作</title><link>https://www.ganymedenil.com/2019/05/14/go-standard-library-by-flag.html</link><pubDate>Tue, 14 May 2019 09:01:11 +0000</pubDate><guid>https://www.ganymedenil.com/2019/05/14/go-standard-library-by-flag.html</guid><description>&lt;p>golang 基础库之go获取命令行参数，介绍了如何使用flag包创建程序交互操作&lt;/p></description></item><item><title>go基础库之go获取命令行参数</title><link>https://www.ganymedenil.com/2019/05/13/go-standard-library-by-os-args.html</link><pubDate>Mon, 13 May 2019 20:23:09 +0000</pubDate><guid>https://www.ganymedenil.com/2019/05/13/go-standard-library-by-os-args.html</guid><description>&lt;p>golang 基础库之go获取命令行参数，介绍了如何获取命令行参数&lt;/p></description></item><item><title>go基础库之go版本获取</title><link>https://www.ganymedenil.com/2019/05/11/go-standard-library-by-runtime-version.html</link><pubDate>Sat, 11 May 2019 12:29:55 +0000</pubDate><guid>https://www.ganymedenil.com/2019/05/11/go-standard-library-by-runtime-version.html</guid><description>&lt;p>golang 基础库之golang版本，介绍了如何获取Golang的运行时版本，以及通过源码解析版本是如何获取的&lt;/p></description></item><item><title>rust语言学习（一）</title><link>https://www.ganymedenil.com/2019/04/07/stady-rust-01.html</link><pubDate>Sun, 07 Apr 2019 15:27:36 +0000</pubDate><guid>https://www.ganymedenil.com/2019/04/07/stady-rust-01.html</guid><description>&lt;p>rust的基础部分，变量、常量、数据类型、函数、注释和控制流&lt;/p></description></item><item><title>使用git hook 部署 hexo 静态博客</title><link>https://www.ganymedenil.com/2019/01/13/Build-hexo-git.html</link><pubDate>Sun, 13 Jan 2019 21:34:12 +0000</pubDate><guid>https://www.ganymedenil.com/2019/01/13/Build-hexo-git.html</guid><description>&lt;p>虽然hexo生成的静态博客很安全，也不需要像Wordpress 那样运维服务器，但是基于本地的静态文件生成和发布还是比较麻烦的，尤其是多个电脑的切换，你每台电脑都需要安装一整套的nodejs 环境和hexo执行环境，通过git服务的hook进行hexo博客生成与部署，就是为了解决这个问题。&lt;/p></description></item><item><title>NGINX 安装</title><link>https://www.ganymedenil.com/2018/08/14/nginx-install.html</link><pubDate>Tue, 14 Aug 2018 21:40:50 +0000</pubDate><guid>https://www.ganymedenil.com/2018/08/14/nginx-install.html</guid><description>&lt;p>主要内容：通过包安装和编译安装的方式对 NGINX 进行安装。&lt;/p></description></item><item><title>操作 Docker 容器</title><link>https://www.ganymedenil.com/2018/07/10/use-docker-container.html</link><pubDate>Tue, 10 Jul 2018 20:13:22 +0000</pubDate><guid>https://www.ganymedenil.com/2018/07/10/use-docker-container.html</guid><description>&lt;p>围绕容器的重要操作，包括创建一个容器、启动容器、终止一个容器、进入容器内执行操作、删除容器和通过导入导出容器来实现容器迁移等。&lt;/p></description></item><item><title>使用 Docker 镜像</title><link>https://www.ganymedenil.com/2018/07/10/use-docker-images.html</link><pubDate>Tue, 10 Jul 2018 20:07:01 +0000</pubDate><guid>https://www.ganymedenil.com/2018/07/10/use-docker-images.html</guid><description>&lt;p>围绕Docker镜像的一系列重要命令操作，包括获取、查看、搜索、删除、创建、存出和载入、上传等。&lt;/p></description></item><item><title>Docker 核心概念</title><link>https://www.ganymedenil.com/2018/07/10/docker-key-conception.html</link><pubDate>Tue, 10 Jul 2018 20:00:45 +0000</pubDate><guid>https://www.ganymedenil.com/2018/07/10/docker-key-conception.html</guid><description>&lt;p>核心概念包括镜像、容器、仓库&lt;/p></description></item><item><title>swoole 学习（一）安装</title><link>https://www.ganymedenil.com/2018/04/22/learn-swoole-install.html</link><pubDate>Sun, 22 Apr 2018 11:52:58 +0000</pubDate><guid>https://www.ganymedenil.com/2018/04/22/learn-swoole-install.html</guid><description>&lt;p>swoole 的安装与使用&lt;/p></description></item></channel></rss>